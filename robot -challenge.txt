#include "robot.hpp"
int main(){
	if (initClientRobot() !=0){
		std::cout<<" Error initializing robot"<<std::endl;
	}
    double vLeft = 10;
    double vRight = 10;
    double vCruise = 10;
    int colStandard = (cameraView.width-50)/2;
    
    int rowStandard   = cameraView.height-10; // makes the row we scanning halfway down no point scanning whole image
    int curPix = 0;
    int curGreen = 0;

	double kP = 0.02;
	int leftCount=0;
	int straightCount = 0;
	bool turnLeft = false;
    while(1){
		int count = 0;
		takePicture();
		SavePPMFile("i0.ppm",cameraView);
        
		std::cout<<" vLeft="<<vLeft<<"  vRight="<<vRight<<std::endl;
		usleep(10000);
       
		int pixels[cameraView.width-50] = {0}; //sets up the array to the width of the image
      
		if(turnLeft == true){
			if(straightCount <= 10){  
				straightCount++;
				vLeft = vCruise;
				vRight = vCruise;
				setMotors(vLeft,vRight);
			}
			else{
				vLeft = vCruise;
				vRight = vCruise+20;
				leftCount++;
			}
			std::cout<<leftCount<<std::endl;
			setMotors(vLeft,vRight); 
			if(leftCount > 20){
				turnLeft = false;
				leftCount = 0;
				straightCount = 0;
			}
		}
		else {	
			for ( int col = 0; col < cameraView.width-50; col++){ 
				curPix = get_pixel(cameraView,rowStandard,col,0);	
				curGreen = get_pixel(cameraView,rowStandard,col,2);
			  
				if(curPix > 250 && curGreen < 125){		
					pixels[col] = 1;
				}
				else{
					pixels[col] = 0; 
					count++;
				}
				if(get_pixel(cameraView,cameraView.height-cameraView.height,6,0) < 250 && get_pixel(cameraView,cameraView.height-95,6,0) < 250 && count == cameraView.width-50){
					turnLeft = true;
				}
			}
		}
		
		int error = 0;
	
		for(int i =0; i <cameraView.width-50; i++){ // checking to see where on the index the white values are 
			if(pixels[i] == 1){
				error += i-5;
			}	
		}
		
	
		vLeft = vCruise + error*kP;
		vRight = vCruise - error*kP;

		if(vLeft > 30){
			vLeft = 60;
		}

		setMotors(vLeft,vRight);
	} //while
} // main
